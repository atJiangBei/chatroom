{"version":3,"sources":["utils/request.ts","pages/login/index.tsx","components/chat/index.tsx","components/user/index.tsx","components/friends-list/index.tsx","pages/chat/index.tsx","router/index.tsx","App.tsx","index.tsx"],"names":["warning","msg","message","request","GET","url","config","params","timeout","Promise","res","rej","axios","get","then","response","datatotal","data","code","catch","err","str","toString","POST","post","Login","props","formRef","useRef","className","ref","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","console","log","localStorage","setItem","JSON","stringify","history","push","onFinishFailed","errorInfo","Item","label","rules","required","placeholder","prefix","UserOutlined","Password","LockOutlined","iconRender","visible","EyeTwoTone","EyeInvisibleOutlined","offset","type","htmlType","onClick","current","resetFields","href","ChatWindow","useState","chatText","setChatText","onEnter","chatList","user","chatBody","useEffect","scrollTop","scrollHeight","offsetHeight","length","map","chat","index","source","TextArea","value","onChange","e","target","onPressEnter","preventDefault","User","userInfo","FriendsList","chattingFriend","friendsList","toggleFriend","friends","updateFriends","allowClear","size","filter","friend","indexOf","isChatting","id","classnames","active","wsPath","process","socket","currentFriend","chatData","Chat","userInfoStr","getItem","parse","friendList","setFriendList","changeChattingFriend","currentChat","updateCurrentChat","queryAllUser","io","query","auth","on","from","to","forEach","item","emit","info","afterChat","IndexRoute","path","component","LoginComponent","ChatComponent","exact","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79942dce.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { message } from 'antd';\r\n\r\ntype url = string\r\ntype config = any\r\n\r\nconst warning = (msg:string) => {\r\n  message.warning(msg);\r\n};\r\n\r\nconst GET = (url:url, config:config) => {\r\n  const params = config.params || {};\r\n  const timeout = config.timeout || 1000;\r\n  return new Promise((res, rej) => {\r\n    axios\r\n      .get(url, {\r\n        params,\r\n        timeout,\r\n      })\r\n      .then((response) => {\r\n        const datatotal = response.data;\r\n        const { code, data, msg } = datatotal;\r\n        if (code === 0) {\r\n          res(data);\r\n        }else {\r\n          rej(msg);\r\n          warning(msg);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        const str = err.toString();\r\n        warning(str);\r\n        rej(str);\r\n      });\r\n  });\r\n};\r\n\r\nexport const POST = (url:url, config:config) => {\r\n  const data = config.data || {};\r\n  const timeout = config.timeout || 60000;\r\n  return new Promise((res, rej) => {\r\n    axios\r\n      .post(url, data, {\r\n        timeout,\r\n      })\r\n      .then((response) => {\r\n        const datatotal = response.data;\r\n        const { code, data, msg } = datatotal;\r\n        if (code === 0) {\r\n          res(data);\r\n        }else {\r\n          rej(msg);\r\n          warning(msg);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        const str = err.toString();\r\n        warning(str);\r\n        rej(str);\r\n      });\r\n  });\r\n};\r\n\r\nconst request = {\r\n  GET: function (url:url, config:config) {\r\n    return GET(url, config);\r\n  },\r\n  POST: function (url:url, config:config) {\r\n    return POST(url, config);\r\n  },\r\n};\r\n\r\nexport default request;\r\n","import React, { useRef } from 'react'\r\nimport { Form, Input, Button } from 'antd'\r\nimport {\r\n  UserOutlined,\r\n  EyeTwoTone,\r\n  EyeInvisibleOutlined,\r\n  LockOutlined,\r\n} from '@ant-design/icons'\r\nimport './index.scss'\r\nimport request from '../../utils/request'\r\nconst Login = (props: any) => {\r\n  const formRef: React.MutableRefObject<any> = useRef(null)\r\n  const onFinish = (values: any) => {\r\n    console.log('Success:', values)\r\n    request.GET(\"/chat/login\", {\r\n      params: {\r\n        ...values\r\n      }\r\n    }).then(res => {\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(res))\r\n      props.history.push('/chat')\r\n    })\r\n  }\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log('Failed:', errorInfo)\r\n  }\r\n  const reset = () => {\r\n    console.log(props)\r\n    formRef.current.resetFields()\r\n  }\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-content padding-large\">\r\n        <h3>用户登录</h3>\r\n        <div>\r\n          <Form\r\n            ref={formRef}\r\n            name=\"basic\"\r\n            labelCol={{ span: 8 }}\r\n            wrapperCol={{ span: 16 }}\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item\r\n              label=\"name\"\r\n              name=\"name\"\r\n              rules={[\r\n                { required: true, message: 'Please input your username!' },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"用户名\" prefix={<UserOutlined />} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              rules={[\r\n                { required: true, message: 'Please input your password!' },\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                prefix={<LockOutlined />}\r\n                placeholder=\"密码\"\r\n                iconRender={(visible) =>\r\n                  visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\r\n                }\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                确定\r\n              </Button>\r\n              <Button htmlType=\"button\" onClick={reset}>\r\n                Reset\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n          <p className=\"ta-right\">\r\n            没有账号，<a href=\"/register\">注册</a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import { useEffect, useState, useRef } from \"react\"\r\nimport './index.scss'\r\nimport { Input } from 'antd'\r\n\r\nconst ChatWindow = (props: any) => {\r\n    const [chatText, setChatText] = useState < string > ('');\r\n    const { onEnter, chatList, user } = props;\r\n    const chatBody: React.MutableRefObject<any> = useRef(null)\r\n    useEffect(() => {\r\n        const current = chatBody.current\r\n        current.scrollTop = current.scrollHeight - current.offsetHeight;\r\n    }, [chatList])\r\n    const onPressEnter = (e: any) => {\r\n        // if (e.ctrlKey && e.keyCode === 13) {\r\n        //按enter+ctrl发送\r\n        // }\r\n        e.preventDefault();\r\n        const value = e.target.value;\r\n        onEnter(value);\r\n        setChatText('');\r\n    }\r\n    return (<div className=\"flex-1 flex chat-window fd-column\">\r\n        <div className=\"flex-1  chat-list\">\r\n            <div className=\"chat-header\">{user.name}</div>\r\n            <div className=\"chat-body custom-scrollbar\" ref={chatBody}>\r\n                <ul>\r\n                    {chatList.length > 0 && chatList.map((chat: any, index: number) => {\r\n                        return (\r\n                            <li key={index + ''}>\r\n                                {chat.source === 'self' && (\r\n                                    <div className=\"self\">\r\n                                        <span className=\"chat-item\">{chat.message}</span>\r\n                                        <strong className=\"head-portrait\">\r\n                                            {chat.name}\r\n                                        </strong>\r\n                                    </div>\r\n                                )}\r\n                                {chat.source === 'he' && (\r\n                                    <div className=\"he\">\r\n                                        <strong className=\"head-portrait\">\r\n                                            {chat.name}\r\n                                        </strong>\r\n                                        <span className=\"chat-item\">{chat.message}</span>\r\n                                    </div>\r\n                                )}\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <div className=\"chat-input-box padding-default\">\r\n            <Input.TextArea\r\n                placeholder=\"按Enter键发送\"\r\n                value={chatText}\r\n                onChange={e => setChatText(e.target.value)}\r\n                onPressEnter={onPressEnter}\r\n            />\r\n        </div>\r\n    </div>)\r\n}\r\n\r\n\r\nexport default ChatWindow;","import React from 'react'\r\nimport './index.scss'\r\n\r\nconst User = (props: any) => {\r\n    const { userInfo } = props\r\n    return <><div className=\"user-self\">\r\n        <h1 className=\"user-name\">{userInfo.name}</h1>\r\n    </div></>\r\n}\r\n\r\nexport default User;\r\n","import { useEffect, useState } from 'react'\r\nimport classnames from 'classnames'\r\nimport './index.scss'\r\nimport { Input } from 'antd'\r\n\r\n\r\nconst FriendsList = (props: any) => {\r\n    const { chattingFriend, friendsList, toggleFriend } = props\r\n    const [friends, updateFriends] = useState(friendsList)\r\n    useEffect(() => {\r\n        updateFriends(friendsList)\r\n    }, [friendsList])\r\n    const onSearch = (e: any) => {\r\n        const value = e.target.value;\r\n        if (!value) {\r\n            updateFriends(friendsList)\r\n        } else {\r\n            const friends = friendsList.filter((friend: any) => friend.name.indexOf(value) > -1)\r\n            updateFriends(friends)\r\n        }\r\n\r\n    };\r\n    return <div className=\"friends-box\">\r\n        <div className=\"friend-search flex ai-center\">\r\n            <Input placeholder=\"搜索\" allowClear size=\"small\" onChange={onSearch} />\r\n        </div>\r\n        <div className=\"friends-list\">\r\n            <ul>\r\n                {friends.length > 0 &&\r\n                    friends.map((friend: any) => {\r\n                        const isChatting = chattingFriend && chattingFriend.id === friend.id\r\n                        return (\r\n                            <li\r\n                                key={friend.id}\r\n                                className={classnames({\r\n                                    active: isChatting\r\n                                })}\r\n                                onClick={() => toggleFriend(friend)}\r\n                            >\r\n                                {friend.name}\r\n                            </li>\r\n                        )\r\n                    })}\r\n            </ul>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default FriendsList;","import { useEffect, useRef, useState } from 'react'\r\nimport './index.scss'\r\nimport io from 'socket.io-client'\r\nimport request from '../../utils/request'\r\n\r\n//组件\r\nimport ChatWindow from '../../components/chat'\r\nimport User from '../../components/user'\r\nimport FriendsList from '../../components/friends-list'\r\n\r\nconst wsPath = `ws://${process.env.REACT_APP_WS}`\r\n\r\nlet userInfo: any = {}\r\nlet socket: any = null\r\nlet currentFriend: any = null\r\nconst chatData: any = {}\r\n\r\nconst Chat = (props: any) => {\r\n  const userInfoStr = localStorage.getItem('userInfo')\r\n  if (userInfoStr) {\r\n    userInfo = JSON.parse(userInfoStr)\r\n  } else {\r\n    props.history.push('/login')\r\n  }\r\n  //聊天好友列表\r\n  const [friendList, setFriendList] = useState([])\r\n  //当前聊天的朋友或者群聊\r\n  const [chattingFriend, changeChattingFriend] = useState<any>()\r\n  //当前聊天窗口的聊天信息\r\n  const [currentChat, updateCurrentChat] = useState<Array<Object>>([])\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      queryAllUser(userInfo)\r\n      socket = io(wsPath, {\r\n        query: {\r\n          name: 'other'\r\n        },\r\n        auth: {\r\n          ...userInfo\r\n        }\r\n      })\r\n    }\r\n\r\n    socket.on('connect', () => {\r\n      console.log('连接成功')\r\n    })\r\n    socket.on('msg', (res: any) => {\r\n      const { type, from, to } = res\r\n      let id = ''\r\n      if (type === 'group') {\r\n        id = to.id\r\n      }\r\n      if (type === 'personal') {\r\n        id = from.id\r\n      }\r\n      chatData[id].push({\r\n        source: 'he',\r\n        message: res.message,\r\n        ...res.from\r\n      })\r\n      if (id === currentFriend.id) {\r\n        updateCurrentChat([...chatData[id]])\r\n      }\r\n    })\r\n  }, [])\r\n  const queryAllUser = (userInfo = {}) => {\r\n    request\r\n      .GET('/chat/queryAllUser', {\r\n        params: userInfo\r\n      })\r\n      .then((friends: any) => {\r\n        setFriendList(friends)\r\n        friends.forEach((item: any) => {\r\n          chatData[item.id] = []\r\n        })\r\n        friends[0] && toggleFriend(friends[0])\r\n      })\r\n  }\r\n  const toggleFriend = (user: any) => {\r\n    changeChattingFriend(user)\r\n    updateCurrentChat(chatData[user.id])\r\n    currentFriend = user\r\n  }\r\n  const onEnter = function(value: string) {\r\n    const { type, id } = chattingFriend\r\n    socket.emit('msg', {\r\n      type: type, //个人\r\n      to: chattingFriend,\r\n      message: value\r\n    })\r\n    const info = {\r\n      source: 'self',\r\n      message: value,\r\n      ...userInfo\r\n    }\r\n    currentChat.push(info)\r\n    const afterChat = [...currentChat]\r\n    updateCurrentChat(afterChat)\r\n    chatData[id] = afterChat\r\n  }\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-content flex\">\r\n        <User userInfo={userInfo}></User>\r\n        <FriendsList\r\n          friendsList={friendList}\r\n          chattingFriend={chattingFriend}\r\n          toggleFriend={toggleFriend}\r\n        ></FriendsList>\r\n        {chattingFriend && (\r\n          <ChatWindow\r\n            chatList={currentChat}\r\n            user={chattingFriend}\r\n            onEnter={onEnter}\r\n          ></ChatWindow>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chat\r\n","import { HashRouter, Route, Redirect, Switch } from 'react-router-dom';\r\nimport LoginComponent from '../pages/login/index'\r\nimport ChatComponent from '../pages/chat'\r\nconst IndexRoute = () => {\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route path=\"/login\" component={LoginComponent}></Route>\r\n        <Route path=\"/chat\" component={ChatComponent}></Route>\r\n        <Redirect from=\"/\" exact to=\"/chat\" />\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default IndexRoute;\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\nimport IndexRouter from './router'\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <IndexRouter></IndexRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}